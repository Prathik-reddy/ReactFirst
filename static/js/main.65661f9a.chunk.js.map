{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capatalize","msg","defaultProps","About","App","Mode","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.65661f9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { a } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home</a>\r\n              {/* <Link className=\"nav-link\" to=\"/\">Home</Link> */}\r\n\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.About}</a>\r\n              // <Link className=\"nav-link\" to=\"/about\">{props.About}</;>\r\n            </li> */}\r\n          </ul>\r\n        </div>\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes= {title: PropTypes.string.isRequired,\r\nAbout: PropTypes.string.isRequired}\r\n\r\n// Should always declare a defaultProps section\r\nNavbar.defaultProps= {title:\"Set title here\",\r\nAbout : \"Set aboutText here\"}\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked: \" +  text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Cleared text\",\"danger\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const handleCopyClick = ()=>{\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\",\"success\");\r\n\r\n    }\r\n    const handleExtraSpcClick = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert(\"Removed Extra Space\",\"warning\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode===\"light\"?\"white\":\"grey\",color:props.mode===\"dark\"?\"white\":\"black\"}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpcClick}>Remove Extra Spc</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here...\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong>{capatalize(props.alert.type)}</strong> : {props.alert.msg}\r\n</div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [Mode,setMode]=useState(\"light\"); //whether dark mode is enabled or not\n  const [alert,setAlert] = useState(null);\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  }\n\n  const toggleMode = ()=>{\n    if (Mode === \"dark\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode enabled\",\"success\");\n      document.title = \"TextUtils : Light mode \";\n    }\n    else{\n    setMode(\"dark\");\n    document.body.style.backgroundColor=\"#11033d\";\n    showAlert(\"Dark mode enabled\",\"success\");\n    document.title = \"TextUtils : Dark mode \";\n    }\n  }\n  return(\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" About=\"AboutUs\" mode={Mode} toggleMode={toggleMode}/>\n    {/* <Navbar /> */}\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\"> */}\n            {/* exact path matches the exact path . Not mentioning the exact keyword may cause the react app to partially match the components .\n            Eg /user --> component1\n            /user/home --> component2 .\n            Here the react app may render the other component if exact keyword is not mentioned*/}\n            {/* <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <Textform showAlert={showAlert} heading=\"Enter the text to analyze below\"  mode={Mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n\n// https://prathik-reddy.github.io/DemoRepo/\n// https://prathik-reddy.github.io/ReactFirst/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}